import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabase = createClient(
  process.env.VITE_SUPABASE_URL,
  process.env.SUPABASE_SERVICE_KEY
);

async function analyzeMapping() {
  console.log('üîç Analyse du mapping entre act_econ_main et main_categories...\n');

  // 1. Charger toutes les cat√©gories ACT_ECON
  console.log('1Ô∏è‚É£ Chargement des cat√©gories ACT_ECON (act_econ_main):\n');
  const { data: actEconData, error: actError } = await supabase
    .from('act_econ_main')
    .select('code, label_fr')
    .order('code');

  if (actError) {
    console.error('‚ùå Erreur act_econ_main:', actError);
    return;
  }

  console.log(`‚úÖ ${actEconData.length} cat√©gories ACT_ECON trouv√©es\n`);
  console.log('√âchantillon:');
  actEconData.slice(0, 10).forEach(cat => {
    console.log(`   ${cat.code}: ${cat.label_fr}`);
  });

  // 2. Charger toutes les cat√©gories du site
  console.log('\n2Ô∏è‚É£ Chargement des cat√©gories du site (main_categories):\n');
  const { data: mainCatsData, error: mainError } = await supabase
    .from('main_categories')
    .select('id, slug, label_fr, label_en')
    .order('label_fr');

  if (mainError) {
    console.error('‚ùå Erreur main_categories:', mainError);
    return;
  }

  console.log(`‚úÖ ${mainCatsData.length} cat√©gories du site trouv√©es\n`);
  mainCatsData.forEach(cat => {
    console.log(`   - ${cat.label_fr} (${cat.slug})`);
  });

  // 3. Analyse comparative
  console.log('\n' + '='.repeat(70));
  console.log('üìä ANALYSE COMPARATIVE');
  console.log('='.repeat(70));
  console.log(`\nACT_ECON: ${actEconData.length} cat√©gories (syst√®me officiel gouvernemental)`);
  console.log(`SITE: ${mainCatsData.length} cat√©gories (syst√®me Google-style simplifi√©)`);

  console.log('\nüí° OBSERVATIONS:');
  console.log('   - ACT_ECON = Syst√®me tr√®s d√©taill√© (74 cat√©gories principales)');
  console.log('   - main_categories = Syst√®me simplifi√© (~20-30 cat√©gories)');
  console.log('   - Plusieurs codes ACT_ECON ‚Üí 1 cat√©gorie site (relation N:1)');

  // 4. Exemples de mapping possibles
  console.log('\nüìã EXEMPLES DE MAPPING POSSIBLES:\n');

  const mappingExamples = [
    {
      site_category: 'Restauration et alimentation',
      act_econ_codes: ['1000 - Industrie des aliments', '1100 - Industries des boissons', '9200 - Restauration']
    },
    {
      site_category: 'Commerce de d√©tail',
      act_econ_codes: ['6000 - Commerces de d√©tail des aliments', '6100 - Commerces de d√©tail des chaussures', '6200 - Commerces de d√©tail de meubles', '6300 - Commerces de d√©tail des v√©hicules automobiles', '6500 - Autres commerces de d√©tail']
    },
    {
      site_category: 'Construction',
      act_econ_codes: ['4000 - Constructeurs', '4200 - Entrepreneurs sp√©cialis√©s', '4400 - Services relatifs √† la construction']
    },
    {
      site_category: 'Services professionnels',
      act_econ_codes: ['7700 - Services aux entreprises', '8500 - Services d\'enseignement']
    },
    {
      site_category: 'Sant√© et bien-√™tre',
      act_econ_codes: ['8600 - Services de sant√© et services sociaux']
    },
    {
      site_category: 'Tourisme et h√©bergement',
      act_econ_codes: ['9100 - H√©bergement', '9600 - Services de divertissements et de loisirs']
    }
  ];

  mappingExamples.forEach(example => {
    console.log(`üè∑Ô∏è  ${example.site_category}`);
    console.log('   Codes ACT_ECON sugg√©r√©s:');
    example.act_econ_codes.forEach(code => {
      console.log(`   ‚Üí ${code}`);
    });
    console.log('');
  });

  // 5. Structure de table propos√©e
  console.log('='.repeat(70));
  console.log('üíæ PROPOSITION DE STRUCTURE');
  console.log('='.repeat(70));
  console.log('\nOption 1: Table de mapping (recommand√©)');
  console.log('‚îÄ'.repeat(70));
  console.log(`
CREATE TABLE act_econ_to_main_category (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  act_econ_code TEXT NOT NULL REFERENCES act_econ_main(code),
  main_category_id UUID NOT NULL REFERENCES main_categories(id),
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  UNIQUE(act_econ_code, main_category_id)
);

-- Index pour recherche rapide
CREATE INDEX idx_act_econ_to_main_category_code
  ON act_econ_to_main_category(act_econ_code);
CREATE INDEX idx_act_econ_to_main_category_category
  ON act_econ_to_main_category(main_category_id);
  `);

  console.log('\nOption 2: Colonne directe dans act_econ_main');
  console.log('‚îÄ'.repeat(70));
  console.log(`
ALTER TABLE act_econ_main
ADD COLUMN main_category_id UUID REFERENCES main_categories(id);

-- Index
CREATE INDEX idx_act_econ_main_category_id
  ON act_econ_main(main_category_id);
  `);

  console.log('\n='.repeat(70));
  console.log('‚úÖ RECOMMANDATION: Option 1 (table de mapping)');
  console.log('='.repeat(70));
  console.log('\nAvantages:');
  console.log('   ‚úì Flexible: Un code ACT_ECON peut mapper √† plusieurs cat√©gories site');
  console.log('   ‚úì √âvolutif: Facile d\'ajouter/modifier des mappings');
  console.log('   ‚úì Historique: Peut tracker les changements');
  console.log('   ‚úì Performance: Index optimis√©s pour les deux sens de recherche');

  console.log('\nüìù PROCHAINES √âTAPES:');
  console.log('   1. Cr√©er la table act_econ_to_main_category');
  console.log('   2. Cr√©er un fichier de mapping manuel (JSON/CSV)');
  console.log('   3. Importer les mappings dans la table');
  console.log('   4. Utiliser pour auto-cat√©goriser les nouvelles entreprises');
}

analyzeMapping();
