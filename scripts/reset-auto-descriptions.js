import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabase = createClient(
  process.env.VITE_SUPABASE_URL,
  process.env.VITE_SUPABASE_ANON_KEY
);

/**
 * Reset auto-generated descriptions back to empty
 */
async function resetAutoDescriptions() {
  console.log('🔄 Annulation des descriptions auto-générées...\n');

  try {
    // Find businesses with our auto-generated description pattern
    // Use a more efficient query - check description starts with our text
    const { data: businesses, error: fetchError } = await supabase
      .from('businesses')
      .select('id, name, city, description')
      .not('description', 'is', null)
      .limit(1000); // Get a larger batch to check

    if (fetchError) {
      console.error('❌ Erreur:', fetchError);
      return;
    }

    if (!businesses || businesses.length === 0) {
      console.log('✅ Aucune entreprise à réinitialiser');
      return;
    }

    // Filter to only those with our auto-generated text (old or new version)
    const autoGenerated = businesses.filter(b =>
      b.description && (
        b.description.startsWith('Il est possible d\'avoir votre fiche') ||
        b.description.startsWith('Il est possible d\'ajouter votre fiche')
      )
    );

    console.log(`📝 ${autoGenerated.length} entreprises avec description auto-générée trouvées\n`);

    if (autoGenerated.length === 0) {
      console.log('✅ Rien à réinitialiser');
      return;
    }

    let reset = 0;
    let failed = 0;

    for (const business of autoGenerated) {
      console.log(`🔄 Réinitialisation: ${business.name} (${business.city})`);

      const { error: updateError } = await supabase
        .from('businesses')
        .update({ description: null })
        .eq('id', business.id);

      if (updateError) {
        console.error(`   ❌ Erreur: ${updateError.message}`);
        failed++;
      } else {
        console.log(`   ✅ Réinitialisé`);
        reset++;
      }

      // Pause to avoid rate limiting
      await new Promise(resolve => setTimeout(resolve, 50));
    }

    console.log('\n📊 Résumé:');
    console.log(`   ✅ Réinitialisés: ${reset}`);
    console.log(`   ❌ Échoués: ${failed}`);

  } catch (error) {
    console.error('❌ Erreur fatale:', error);
  }
}

resetAutoDescriptions();
